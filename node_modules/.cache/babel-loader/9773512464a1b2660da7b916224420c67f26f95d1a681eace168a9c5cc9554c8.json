{"ast":null,"code":"var _jsxFileName = \"/Users/zuru/Downloads/Univ/Assignments/OpenSourceStudio/oss_team_project/src/pages/currencyList.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport styles from './currencyList.module.css';\nimport Panel from '../components/panel';\nimport Search from '../components/search';\nimport CurrencyBox from '../components/currencyBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CurrencyList() {\n  _s();\n  const [currencyData, setCurrencyData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [selectedCurrency, setSelectedCurrency] = useState(null);\n  const [selectedOption, setSelectedOption] = useState([\"all\"]);\n  const baseRef = useRef(0);\n  const targetRef = useRef(0);\n  const searchRef = useRef(\"\");\n  const applyFilter = () => {\n    let searchValue = searchRef.current.value.toLowerCase();\n    switch (selectedOption) {\n      case \"all\":\n        if (searchValue === \"\") {\n          setFilteredData(currencyData);\n          return;\n        }\n        setFilteredData(currencyData.filter(data => {\n          return data.cur_nm.toLowerCase().includes(searchValue) || data.cur_unit.toLowerCase().includes(searchValue);\n        }));\n        return;\n      case \"increasing\":\n        if (searchValue === \"\") {\n          setFilteredData(currencyData.filter(data => {\n            return data.rate_of_change > 0;\n          }));\n          return;\n        }\n        setFilteredData(currencyData.filter(data => {\n          return data.cur_nm.toLowerCase().includes(searchValue) || data.cur_unit.toLowerCase().includes(searchValue);\n        }).filter(data => {\n          return data.rate_of_change > 0;\n        }));\n        return;\n      case \"decreasing\":\n        if (searchValue === \"\") {\n          setFilteredData(currencyData.filter(data => {\n            return data.rate_of_change < 0;\n          }));\n          return;\n        }\n        setFilteredData(currencyData.filter(data => {\n          return data.cur_nm.toLowerCase().includes(searchValue) || data.cur_unit.toLowerCase().includes(searchValue);\n        }).filter(data => {\n          return data.rate_of_change < 0;\n        }));\n        return;\n      default:\n        return;\n    }\n  };\n  const getDate = () => {\n    const now = new Date();\n    const yearToday = now.getFullYear();\n    const monthToday = String(now.getMonth() + 1).padStart(2, '0');\n    const dayToday = String(now.getDate()).padStart(2, '0');\n    const today = `${yearToday}${monthToday}${dayToday}`;\n    const yesterdayDate = new Date(now);\n    yesterdayDate.setDate(now.getDate() - 1);\n    const yearYesterday = yesterdayDate.getFullYear();\n    const monthYesterday = String(yesterdayDate.getMonth() + 1).padStart(2, '0');\n    const dayYesterday = String(yesterdayDate.getDate()).padStart(2, '0');\n    const yesterday = `${yearYesterday}${monthYesterday}${dayYesterday}`;\n    const dayBeforeYesterdayDate = new Date(now);\n    dayBeforeYesterdayDate.setDate(now.getDate() - 2);\n    const yearBeforeYesterday = dayBeforeYesterdayDate.getFullYear();\n    const monthBeforeYesterday = String(dayBeforeYesterdayDate.getMonth() + 1).padStart(2, '0');\n    const dayBeforeYesterday = String(dayBeforeYesterdayDate.getDate()).padStart(2, '0');\n    const beforeYesterday = `${yearBeforeYesterday}${monthBeforeYesterday}${dayBeforeYesterday}`;\n    return {\n      today,\n      yesterday,\n      beforeYesterday\n    };\n  };\n  const calculateInput = () => {\n    if (targetRef.current.value.trim() === \"\") {\n      baseRef.current.value = 0;\n      return;\n    }\n    if (targetRef.current.value >= 0) baseRef.current.value = parseFloat((parseFloat(targetRef.current.value) * parseFloat(selectedCurrency.deal_bas_r.replace(/,/g, \"\"))).toFixed(5));else baseRef.current.value = 0;\n  };\n  const calculateOutput = () => {\n    if (baseRef.current.value.trim() === \"\") {\n      targetRef.current.value = 0;\n      return;\n    }\n    if (baseRef.current.value >= 0) targetRef.current.value = parseFloat((parseFloat(baseRef.current.value) / parseFloat(selectedCurrency.deal_bas_r.replace(/,/g, \"\"))).toFixed(5));else targetRef.current.value = 0;\n  };\n  const addDataToMockAPI = async data => {\n    getDataFromMockAPI();\n    const mock_API = 'https://67283275270bd0b97554a345.mockapi.io/currency';\n    const new_data = {\n      id: data.id,\n      result: 1,\n      cur_nm: data.cur_nm,\n      cur_unit: data.cur_unit,\n      ttb: data.ttb,\n      tts: data.tts,\n      deal_bas_r: data.deal_bas_r,\n      bkpr: data.bkpr,\n      kftc_deal_bas_r: data.kftc_deal_bas_r,\n      kftc_bkpr: data.kftc_bkpr\n    };\n    try {\n      await fetch(mock_API, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(new_data)\n      });\n    } catch (error) {\n      console.error(\"An error occurred while adding a data.\", error);\n      throw error;\n    }\n  };\n  const saveDataToMockAPI = async data => {\n    const mock_API = 'https://67283275270bd0b97554a345.mockapi.io/currency';\n    const refined_data = data.map((d, i) => {\n      return {\n        result: 1,\n        id: i,\n        cur_nm: d.cur_nm,\n        cur_unit: d.cur_unit,\n        ttb: d.ttb,\n        tts: d.tts,\n        deal_bas_r: d.deal_bas_r,\n        bkpr: d.bkpr,\n        kftc_deal_bas_r: d.kftc_deal_bas_r,\n        kftc_bkpr: d.kftc_bkpr\n      };\n    });\n    try {\n      await fetch(mock_API, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n    } catch (error) {\n      console.error(\"An error occurred while adding a data.\", error);\n      throw error;\n    }\n  };\n  const getDataFromMockAPI = async () => {\n    const mock_API = 'https://67283275270bd0b97554a345.mockapi.io/currency';\n    try {\n      const response = await fetch(mock_API);\n      const data = await response.json();\n      return data[0].currency_array;\n    } catch (error) {\n      console.error(\"An error occurred while loading data.\", error);\n      throw error;\n    }\n  };\n  const getDataFromOpenAPI = async () => {\n    const dateInfo = getDate();\n    try {\n      let response = await fetch(`/exchangeJSON?authkey=3wNf5tfXGjytedr8fF3AUEljbd30YBED&searchdate=${dateInfo.yesterday}&data=AP01`);\n      let data = await response.json();\n      let response2 = await fetch(`/exchangeJSON?authkey=3wNf5tfXGjytedr8fF3AUEljbd30YBED&searchdate=${dateInfo.beforeYesterday}&data=AP01`);\n      let data2 = await response2.json();\n      if (data.length === 0 || data[0].result === 4) {\n        try {\n          let response = await fetch(`/exchangeJSON?authkey=3wNf5tfXGjytedr8fF3AUEljbd30YBED&searchdate=${dateInfo.yesterday}&data=AP01`);\n          let data = await response.json();\n          console.log(\"1일전 데이터: \", data);\n          // await saveDataToMockAPI(data);\n          // const latest_data = await getDataFromMockAPI();\n\n          // setCurrencyData(latest_data);\n          // setSelectedCurrency(latest_data[0]);\n        } catch (error) {\n          console.error('Error fetching exchange rate:', error);\n          throw error;\n        }\n      } else {\n        console.log(\"최근 데이터: \", data);\n        // await saveDataToMockAPI(data);\n        // const latest_data = await getDataFromMockAPI();\n        const modifiedData = data.map((e, i) => {\n          let todayValue = parseFloat(e.deal_bas_r.replace(\",\", \"\"));\n          let yesterdayValue = parseFloat(data2[i].deal_bas_r.replace(\",\", \"\"));\n          return {\n            ...e,\n            rate_of_change: ((todayValue - yesterdayValue) / yesterdayValue * 100).toFixed(2)\n          };\n        });\n        setCurrencyData(modifiedData);\n        setFilteredData(modifiedData);\n        setSelectedCurrency(modifiedData[0]);\n      }\n    } catch (error) {\n      console.error('Error fetching exchange rate:', error);\n      throw error;\n    }\n  };\n  const setTarget = data => {\n    calculateOutput();\n    setSelectedCurrency(data);\n  };\n  const setOption = option => {\n    setSelectedOption(option);\n    applyFilter();\n  };\n  useEffect(() => {\n    // getDataFromMockAPI();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.page_container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.page_section_panel,\n      children: /*#__PURE__*/_jsxDEV(Panel, {\n        selected: selectedCurrency,\n        getData: getDataFromOpenAPI,\n        baseRef: baseRef,\n        targetRef: targetRef,\n        calculateInput: calculateInput,\n        calculateOutput: calculateOutput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.page_section_currency,\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        searchRef: searchRef,\n        applyFilter: applyFilter,\n        setOption: setOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CurrencyBox, {\n        data: filteredData,\n        setTarget: setTarget\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n}\n_s(CurrencyList, \"ZqxT7WODDae15V8v4eDNEZgFw+I=\");\n_c = CurrencyList;\nvar _c;\n$RefreshReg$(_c, \"CurrencyList\");","map":{"version":3,"names":["React","useRef","useState","useEffect","styles","Panel","Search","CurrencyBox","jsxDEV","_jsxDEV","CurrencyList","_s","currencyData","setCurrencyData","filteredData","setFilteredData","selectedCurrency","setSelectedCurrency","selectedOption","setSelectedOption","baseRef","targetRef","searchRef","applyFilter","searchValue","current","value","toLowerCase","filter","data","cur_nm","includes","cur_unit","rate_of_change","getDate","now","Date","yearToday","getFullYear","monthToday","String","getMonth","padStart","dayToday","today","yesterdayDate","setDate","yearYesterday","monthYesterday","dayYesterday","yesterday","dayBeforeYesterdayDate","yearBeforeYesterday","monthBeforeYesterday","dayBeforeYesterday","beforeYesterday","calculateInput","trim","parseFloat","deal_bas_r","replace","toFixed","calculateOutput","addDataToMockAPI","getDataFromMockAPI","mock_API","new_data","id","result","ttb","tts","bkpr","kftc_deal_bas_r","kftc_bkpr","fetch","method","headers","body","JSON","stringify","error","console","saveDataToMockAPI","refined_data","map","d","i","response","json","currency_array","getDataFromOpenAPI","dateInfo","response2","data2","length","log","modifiedData","e","todayValue","yesterdayValue","setTarget","setOption","option","className","page_container","children","page_section_panel","selected","getData","fileName","_jsxFileName","lineNumber","columnNumber","page_section_currency","_c","$RefreshReg$"],"sources":["/Users/zuru/Downloads/Univ/Assignments/OpenSourceStudio/oss_team_project/src/pages/currencyList.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport styles from './currencyList.module.css';\nimport Panel from '../components/panel';\nimport Search from '../components/search';\nimport CurrencyBox from '../components/currencyBox';\n\nexport default function CurrencyList() {\n  const [currencyData, setCurrencyData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [selectedCurrency, setSelectedCurrency] = useState(null);\n  const [selectedOption, setSelectedOption] = useState([\"all\"]);\n  const baseRef = useRef(0);\n  const targetRef = useRef(0);\n  const searchRef = useRef(\"\");\n\n  const applyFilter = () => {\n    let searchValue = searchRef.current.value.toLowerCase();\n\n    switch (selectedOption) {\n      case \"all\":\n        if (searchValue === \"\") {\n          setFilteredData(currencyData);\n          return;\n        }\n    \n        setFilteredData(\n          currencyData.filter((data) => {\n            return data.cur_nm.toLowerCase().includes(searchValue)\n            || data.cur_unit.toLowerCase().includes(searchValue);\n          })\n        );\n      return;\n\n      case \"increasing\":\n        if (searchValue === \"\") {\n          setFilteredData(\n            currencyData.filter((data) => {\n              return data.rate_of_change > 0;\n            })\n          );\n          return;\n        }\n    \n        setFilteredData(\n          currencyData.filter((data) => {\n            return data.cur_nm.toLowerCase().includes(searchValue)\n            || data.cur_unit.toLowerCase().includes(searchValue);\n          }).filter((data) => {\n            return data.rate_of_change > 0;\n          })\n        );\n      return;\n\n      case \"decreasing\":\n        if (searchValue === \"\") {\n          setFilteredData(\n            currencyData.filter((data) => {\n              return data.rate_of_change < 0;\n            })\n          );\n          return;\n        }\n    \n        setFilteredData(\n          currencyData.filter((data) => {\n            return data.cur_nm.toLowerCase().includes(searchValue)\n            || data.cur_unit.toLowerCase().includes(searchValue);\n          }).filter((data) => {\n            return data.rate_of_change < 0;\n          })\n        );\n      return;\n\n      default:\n      return;\n    }\n  }\n\n  const getDate = () => {\n    const now = new Date();\n\n    const yearToday = now.getFullYear();\n    const monthToday = String(now.getMonth() + 1).padStart(2, '0');\n    const dayToday = String(now.getDate()).padStart(2, '0');\n    const today = `${yearToday}${monthToday}${dayToday}`;\n\n    const yesterdayDate = new Date(now);\n    yesterdayDate.setDate(now.getDate() - 1);\n    const yearYesterday = yesterdayDate.getFullYear();\n    const monthYesterday = String(yesterdayDate.getMonth() + 1).padStart(2, '0');\n    const dayYesterday = String(yesterdayDate.getDate()).padStart(2, '0');\n    const yesterday = `${yearYesterday}${monthYesterday}${dayYesterday}`;\n\n    const dayBeforeYesterdayDate = new Date(now);\n    dayBeforeYesterdayDate.setDate(now.getDate() - 2);\n    const yearBeforeYesterday = dayBeforeYesterdayDate.getFullYear();\n    const monthBeforeYesterday = String(dayBeforeYesterdayDate.getMonth() + 1).padStart(2, '0');\n    const dayBeforeYesterday = String(dayBeforeYesterdayDate.getDate()).padStart(2, '0');\n    const beforeYesterday = `${yearBeforeYesterday}${monthBeforeYesterday}${dayBeforeYesterday}`;\n\n    return { today, yesterday, beforeYesterday };\n  }\n\n  const calculateInput = () => {\n    if (targetRef.current.value.trim() === \"\") {\n      baseRef.current.value = 0;\n      return;\n    }\n\n    if (targetRef.current.value >= 0) baseRef.current.value = parseFloat((parseFloat(targetRef.current.value) * parseFloat(selectedCurrency.deal_bas_r.replace(/,/g, \"\"))).toFixed(5));\n    else baseRef.current.value = 0;\n  }\n\n  const calculateOutput = () => {\n    if (baseRef.current.value.trim() === \"\") {\n      targetRef.current.value = 0;\n      return;\n    }\n\n    if (baseRef.current.value >= 0) targetRef.current.value = parseFloat((parseFloat(baseRef.current.value) / parseFloat(selectedCurrency.deal_bas_r.replace(/,/g, \"\"))).toFixed(5));\n    else targetRef.current.value = 0;\n  }\n\n  const addDataToMockAPI = async (data) => {\n    getDataFromMockAPI();\n    const mock_API = 'https://67283275270bd0b97554a345.mockapi.io/currency';\n    const new_data = {\n      id: data.id,\n      result: 1,\n      cur_nm: data.cur_nm,\n      cur_unit: data.cur_unit,\n      ttb: data.ttb,\n      tts: data.tts,\n      deal_bas_r: data.deal_bas_r,\n      bkpr: data.bkpr,\n      kftc_deal_bas_r: data.kftc_deal_bas_r,\n      kftc_bkpr: data.kftc_bkpr\n    };\n\n    try {\n      await fetch(mock_API, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(new_data),\n      });\n    } catch (error) {\n      console.error(\"An error occurred while adding a data.\", error);\n      throw error;\n    }\n  }\n  const saveDataToMockAPI = async (data) => {\n    const mock_API = 'https://67283275270bd0b97554a345.mockapi.io/currency';\n\n    const refined_data = data.map((d, i) => {\n      return {\n        result: 1,\n        id: i,\n        cur_nm: d.cur_nm,\n        cur_unit: d.cur_unit,\n        ttb: d.ttb,\n        tts: d.tts,\n        deal_bas_r: d.deal_bas_r,\n        bkpr: d.bkpr,\n        kftc_deal_bas_r: d.kftc_deal_bas_r,\n        kftc_bkpr: d.kftc_bkpr\n      }\n    })\n  \n    try {\n      await fetch(mock_API, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      });\n    } catch (error) {\n      console.error(\"An error occurred while adding a data.\", error);\n      throw error;\n    }\n  };\n\n  const getDataFromMockAPI = async () => {\n    const mock_API = 'https://67283275270bd0b97554a345.mockapi.io/currency';\n\n    try {\n      const response = await fetch(mock_API);\n      const data = await response.json();\n      return data[0].currency_array;\n    } catch (error) {\n      console.error(\"An error occurred while loading data.\", error);\n      throw error;\n    }\n  }\n\n  const getDataFromOpenAPI = async () => {\n    const dateInfo = getDate();\n  \n    try {\n      let response = await fetch(`/exchangeJSON?authkey=3wNf5tfXGjytedr8fF3AUEljbd30YBED&searchdate=${dateInfo.yesterday}&data=AP01`);\n      let data = await response.json();\n\n      let response2 = await fetch(`/exchangeJSON?authkey=3wNf5tfXGjytedr8fF3AUEljbd30YBED&searchdate=${dateInfo.beforeYesterday}&data=AP01`);\n      let data2 = await response2.json();\n\n      if (data.length === 0 || data[0].result === 4) {\n        try {\n          let response = await fetch(`/exchangeJSON?authkey=3wNf5tfXGjytedr8fF3AUEljbd30YBED&searchdate=${dateInfo.yesterday}&data=AP01`);\n          let data = await response.json();\n          console.log(\"1일전 데이터: \", data);\n          // await saveDataToMockAPI(data);\n          // const latest_data = await getDataFromMockAPI();\n\n          // setCurrencyData(latest_data);\n          // setSelectedCurrency(latest_data[0]);\n        } catch (error) {\n          console.error('Error fetching exchange rate:', error);\n          throw error;\n        }\n      } else {\n        console.log(\"최근 데이터: \", data);\n        // await saveDataToMockAPI(data);\n        // const latest_data = await getDataFromMockAPI();\n        const modifiedData = data.map((e, i) => {\n          let todayValue = parseFloat(e.deal_bas_r.replace(\",\",\"\"));\n          let yesterdayValue = parseFloat(data2[i].deal_bas_r.replace(\",\",\"\"));\n\n          return {\n            ...e,\n            rate_of_change: (((todayValue - yesterdayValue) / yesterdayValue) * 100).toFixed(2)\n          }\n        });\n\n        setCurrencyData(modifiedData);\n        setFilteredData(modifiedData);\n        setSelectedCurrency(modifiedData[0]);\n      }\n    } catch (error) {\n      console.error('Error fetching exchange rate:', error);\n      throw error;\n    }\n  }\n\n  const setTarget = (data) => {\n    calculateOutput();\n    setSelectedCurrency(data);\n  }\n\n  const setOption = (option) => {\n    setSelectedOption(option);\n    applyFilter();\n  }\n\n  useEffect(() => {\n    // getDataFromMockAPI();\n  }, []);\n\n  return (\n    <div className={styles.page_container}>\n      <div className={styles.page_section_panel}>\n        <Panel \n          selected={selectedCurrency} \n          getData={getDataFromOpenAPI} \n          baseRef={baseRef} \n          targetRef={targetRef} \n          calculateInput={calculateInput} \n          calculateOutput={calculateOutput} \n        />\n      </div>\n      <div className={styles.page_section_currency}>\n        <Search searchRef={searchRef} applyFilter={applyFilter} setOption={setOption} />\n        <CurrencyBox data={filteredData} setTarget={setTarget} />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}