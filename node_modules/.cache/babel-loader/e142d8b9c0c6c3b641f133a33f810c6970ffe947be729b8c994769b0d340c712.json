{"ast":null,"code":"var _jsxFileName = \"/Users/zuru/Downloads/Univ/Assignments/OpenSourceStudio/oss_team_project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // API URL 및 키\n  const API_URL = \"https://www.koreaexim.go.kr/site/program/financial/exchangeJSON\";\n  const AUTH_KEY = \"AUTHKEY1234567890\";\n  const SEARCH_DATE = \"20180102\";\n  const DATA_TYPE = \"AP01\";\n  useEffect(() => {\n    // Fetch 데이터 가져오기\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${API_URL}?authkey=${AUTH_KEY}&searchdate=${SEARCH_DATE}&data=${DATA_TYPE}`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch exchange rate data.\");\n        }\n        const json = await response.json();\n        setData(json);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []); // 의존성 배열이 비어 있으므로 한 번만 실행\n\n  // 로딩 상태\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n\n  // 에러 처리\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Exchange Rates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Currency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Base Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.cur_nm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.cur_unit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [item.ttb, \" (Base Rate)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, item.cur_unit, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","data","setData","loading","setLoading","error","setError","API_URL","AUTH_KEY","SEARCH_DATE","DATA_TYPE","fetchData","response","fetch","ok","Error","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","border","map","item","cur_nm","cur_unit","ttb","_c","$RefreshReg$"],"sources":["/Users/zuru/Downloads/Univ/Assignments/OpenSourceStudio/oss_team_project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst App = () => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    // API URL 및 키\n    const API_URL = \"https://www.koreaexim.go.kr/site/program/financial/exchangeJSON\";\n    const AUTH_KEY = \"AUTHKEY1234567890\";\n    const SEARCH_DATE = \"20180102\";\n    const DATA_TYPE = \"AP01\";\n\n    useEffect(() => {\n        // Fetch 데이터 가져오기\n        const fetchData = async () => {\n            try {\n                const response = await fetch(\n                    `${API_URL}?authkey=${AUTH_KEY}&searchdate=${SEARCH_DATE}&data=${DATA_TYPE}`\n                );\n                if (!response.ok) {\n                    throw new Error(\"Failed to fetch exchange rate data.\");\n                }\n                const json = await response.json();\n                setData(json);\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, []); // 의존성 배열이 비어 있으므로 한 번만 실행\n\n    // 로딩 상태\n    if (loading) {\n        return <p>Loading...</p>;\n    }\n\n    // 에러 처리\n    if (error) {\n        return <p>Error: {error}</p>;\n    }\n\n    return (\n        <div>\n            <h1>Exchange Rates</h1>\n            <table border=\"1\">\n                <thead>\n                    <tr>\n                        <th>Currency</th>\n                        <th>Code</th>\n                        <th>Base Rate</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {data.map((item) => (\n                        <tr key={item.cur_unit}>\n                            <td>{item.cur_nm}</td>\n                            <td>{item.cur_unit}</td>\n                            <td>{item.ttb} (Base Rate)</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}